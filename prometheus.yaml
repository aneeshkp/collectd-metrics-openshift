# test alert: curl -H "Content-Type: application/json" -d '[{"labels":{"alertname":"TestAlert1", "severity":"critical"}}]' localhost:9093/api/v1/alerts
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: prometheus
rules:
- apiGroups: [""]
  resources:
  - nodes
  - nodes/proxy
  - services
  - endpoints
  - pods
  verbs: ["get", "list", "watch"]
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs: ["get", "list", "watch"]
- nonResourceURLs: ["/metrics"]
  verbs: ["get"]
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: prometheus
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus
subjects:
- kind: ServiceAccount
  name: prometheus
  namespace: default
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    name: prometheus-deployment
  name: prometheus
  namespace: default
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      serviceAccountName: prometheus
      securityContext:
        fsGroup: 2000       # 2000 works but container runs as 'nobody/nobody', id/gid: 65534
      #nodeSelector:
      #  node-role.kubernetes.io/master: "true"
      containers:
      - image: quay.io/prometheus/prometheus:v2.1.0
        name: prometheus
        command:
        - "/bin/prometheus"
        args:
        - "--config.file=/etc/prometheus/prometheus.yml"
        - "--storage.tsdb.path=/prometheus"
        - "--storage.tsdb.retention=1d"
        - "--web.enable-lifecycle"
        - "--web.external-url=http://mgmt:30500/"
        ports:
        - containerPort: 9090
          protocol: TCP
        volumeMounts:
        - mountPath: "/prometheus"
          name: data
        - mountPath: "/etc/prometheus"
          name: config-volume-prometheus
        resources:
          requests:
            cpu: 800m
            memory: 1600Mi
          limits:
            cpu: 1000m
            memory: 2400Mi
      volumes:
      - name: data
        emptyDir: {}
      - name: config-volume-prometheus
        configMap:
          name: prometheus-config
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: default
data:
  prometheus.yml: |
    global:
      scrape_interval:     15s # Default is every 1 minute.
      evaluation_interval: 15s # Default is every 1 minute.
      # scrape_timeout is set to the global default (10s).

   
    scrape_configs:
    - job_name: 'collectd-exporter'
      static_configs:
        - targets: ['172.30.89.162:9103']
---

apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: default
spec:
  selector:
    app: prometheus
  ports:
  - port: 9090
    targetPort: 9090



