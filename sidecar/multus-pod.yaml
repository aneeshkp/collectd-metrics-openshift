kind: ConfigMap
apiVersion: v1
metadata:
  name: collectd-multus-sidecar-config
data:

  node-sidecar-collectd.conf: |-
    #Hostname "<hostname_goes_here>"
    #Sets the hostname that identifies a host. If you omit this setting, 
    #the hostname will be determined using the gethostname(2) system call.
    #
    Interval 10
    LoadPlugin "logfile"
    <Plugin "logfile">
      LogLevel "info"
      File "/var/log/collectd.log"
      Timestamp true
    </Plugin>
    LoadPlugin interface
    <Plugin interface>
     Interface "lo"
     IgnoreSelected true
    </Plugin>
    #LoadPlugin csv
    #<Plugin csv>
    #  DataDir "/tmp/collectd/csv"
    #  StoreRates true
    #</Plugin>
    LoadPlugin memory
    <Plugin memory>
      ValuesAbsolute true
      ValuesPercentage true
    </Plugin>
    LoadPlugin network
    <Plugin network>
      Server "192.168.111.15" "30300"
    </Plugin>
    #<Plugin "write_prometheus">
    #  Port "9103"
    #</Plugin>
    #Last line (collectd requires ‘\n’ at the last line)
---    
apiVersion: v1
kind: Pod
metadata:
  name: pod-with-multus-sidecar
  annotations:
    k8s.v1.cni.cncf.io/networks: multus-cni-macvlan
  labels:
    app: collectd-multus-sidecar-pod-service
spec:
  # In the sidecar pattern, there is a main application
  # container and a sidecar container.
  containers:
  # Main application container
  - name: pod-with-multus
    image: docker.io/centos/tools:latest
    command:
    - /sbin/init
  # Sidecar container
  - name: sidecar-multus-collectd-container
    image: docker.io/opnfv/barometer-collectd
    securityContext:
      privileged: true
    resources: {}
  volumes:
    - name: config
      configMap:
        name: collectd-multus-sidecar-config
        items:
        - key: node-sidecar-collectd.conf
          path: collectd.conf
---
apiVersion: "k8s.cni.cncf.io/v1"
kind: NetworkAttachmentDefinition
metadata:
  name: multus-cni-macvlan
spec:
  config: '{
      "cniVersion": "0.3.0",
      "type": "macvlan",
      "master": "ens803f0",
      "mode": "bridge",
      "ipam": {
        "type": "host-local",
        "subnet": "192.168.1.0/24",
        "rangeStart": "192.168.1.200",
        "rangeEnd": "192.168.1.216",
        "routes": [
          { "dst": "0.0.0.0/0" }
        ],
        "gateway": "192.168.1.1"
      }
    }'
